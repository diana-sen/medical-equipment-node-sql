-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.area
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    name varchar(255) NOT NULL,
    created_at varchar(255),
    updated_at varchar(255),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.model
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    description text NOT NULL,
    brand varchar(255) NOT NULL,
    manufacture_year "char" NOT NULL,
    created_at varchar(255),
    updated_at varchar(255),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.maintenance_record
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    medical_equipment_id integer NOT NULL,
    maintenance_order varchar(255) NOT NULL,
    maintenance_type varchar(255) NOT NULL,
    note text,
    date varchar(255) NOT NULL,
    created_at varchar(255),
    updated_at varchar(255),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.person
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    first_name varchar(255) NOT NULL,
    last_name varchar(255) NOT NULL,
    role varchar(255) NOT NULL,
    phone varchar(255) NOT NULL,
    email_address varchar(255) NOT NULL,
    created_at varchar(255),
    updated_at varchar(255),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.medical_equipment
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    inventory_code varchar(255) NOT NULL,
    name varchar(255) NOT NULL,
    serial_number varchar(255) NOT NULL,
    model_id integer NOT NULL,
    responsible_id integer,
    area_id integer,
    is_active boolean,
    created_at varchar(255),
    updated_at varchar(255),
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.maintenance_record
    ADD FOREIGN KEY (medical_equipment_id)
    REFERENCES public.medical_equipment (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medical_equipment
    ADD FOREIGN KEY (model_id)
    REFERENCES public.model (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medical_equipment
    ADD FOREIGN KEY (area_id)
    REFERENCES public.area (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medical_equipment
    ADD FOREIGN KEY (responsible_id)
    REFERENCES public.person (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;